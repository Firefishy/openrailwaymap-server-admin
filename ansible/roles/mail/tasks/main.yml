# SPDX-License-Identifier: MIT
- hosts: all
  remote_user: root

  tasks:
    - name: Install Postfix
      apt:
        name: [postfix, postfix-pcre, postgrey]

    - name: Add localhost.localdomain to Postgrey whitelist
      lineinfile:
        path: /etc/postgrey/whitelist_clients
        regexp: '^localhost.localdomain$'
        line: 'localhost.localdomain'

    - name: set /etc/mailname
      copy:
        dest: /etc/mailname
        owner: root
        group: root
        mode: 0644
        content: |
          {{ inventory_hostname }}

  #    - name: Ensure that Postfix and Postgrey do not run
  #      systemd:
  #        name: '{{ item }}'
  #        state: stopped
  #      loop:
  #        - postfix
  #        - postgrey

    - name: Generate our own DH parameters, see http://www.postfix.org/postconf.5.html#smtp_tls_policy_maps for details
      openssl_dhparam:
        size: 2048
        mode: 0640
        owner: root
        group: root
        path: /etc/postfix/dh2048.pem

    - name: 'virtual_alias_map and bad_senders'
      include_tasks: write_and_hash.yml
      loop:
        - {'src': 'virtual_alias_map', 'dest': '/etc/postfix/virtual_alias_map', 'cmd': 'postalias'}
        - {'src': 'bad_senders', 'dest': '/etc/postfix/bad_senders', 'cmd': 'postmap'}

    - name: Write /etc/postfix/main.cf
      template:
        dest: /etc/postfix/main.cf
        src: main.cf
        owner: root
        group: root
        mode: 0644
      notify:
        - systemctl reload postfix

    - name: Write /etc/postfix/master.cf
      copy:
        dest: /etc/postfix/master.cf
        src: master.cf
        owner: root
        group: root
        mode: 0644
      notify:
        - systemctl restart postfix

    - name: Write header checks for simple spam filtering to /etc/postfix/header_checks and Postscreen IP blacklist
      copy:
        dest: '/etc/postfix/{{ item }}'
        owner: root
        group: root
        mode: 0644
        src: '{{ item }}'
      loop:
        - 'postscreen_access.cidr'
        - 'header_checks.pcre'
      notify:
        - systemctl reload postfix

    - name: Install Amavis from APT
      apt:
        name: [amavisd-new, amavisd-milter]

  #    - name: Ensure that Amavis does not run
  #      systemd:
  #        name: '{{ item }}'
  #        state: stopped
  #      loop:
  #        - amavisd-new
  #        - amavisd-milter

    - name: Write custom Amavis configuration to /etc/amavis/conf.d/50-user
      copy:
        dest: /etc/amavis/conf.d/50-user
        src: 50-user
        owner: root
        group: root
        mode: 0644
      notify:
        - systemctl restart amavisd-new

    - name: Add Symlink /var/spool/postfix/amavis -> /var/run/amavis for chroot-ed Postfix
      file:
        dest: /var/spool/postfix/amavis
        src: /var/run/amavis
        owner: root
        group: root
        state: link

    - name: Install Spamassassin
      apt:
        name: spamassassin

    - name: Mailman 2 setup
      when: mail.mailman2
      block:
        - name: 'Create entries in Debconf database for Mailman 2 setup'
          shell:
            cmd: 'debconf-set-selections'
            stdin: |
              mailman mailman/site_languages multiselect en
              mailman mailman/used_languages  string
              mailman mailman/default_server_language select  en
              mailman mailman/queue_files_present select abort installation
              mailman mailman/create_site_list note
        - name: 'Install Mailman 2'
          apt:
            name: mailman

        - name: 'Modify Mailman 2 configuration'
          lineinfile:
            path: /etc/mailman/mm_cfg.py
            regexp: "^{{ item.key }} *="
            line: "{{ item.key }} = '{{ item.value }}'"
          loop:
            - {'key': 'DEFAULT_URL_HOST', 'value': 'lists.openrailwaymap.org'}
            - {'key': 'DEFAULT_EMAIL_HOST', 'value': 'openrailwaymap.org'}
            - {'key': 'DEFAULT_URL_PATTERN', 'value': 'https://%s/mailman/'}
          notify:
            - systemctl restart mailman

        - name: Copy sitelist.cfg
          copy:
            src: sitelist.cfg
            dest: /etc/mailman/sitelist.cfg
            owner: root
            group: root
            mode: 0644

        - name: Create and hash aliases file for Mailman mailing lists
          include_tasks: write_and_hash.yml
          loop:
            - {'src': 'mailman_aliases', 'dest': '/etc/mailman/aliases', 'cmd': 'postalias'}

        - name: Set permissions on directories in /var/lib/mailman properly
          file:
            path: '{{ item.path }}'
            owner: '{{ item.owner }}'
            group: '{{ item.group }}'
            recurse: '{{ item.recurse }}'
            state: directory
          loop:
            - {'path': '/var/lib/mailman/', 'owner': root, 'group': list, recurse: yes}
            - {'path': '/var/lib/mailman/archives/private', 'owner': 'list', 'group': list, recurse: yes}
            - {'path': '/var/lib/mailman/archives', 'owner': 'www-data', 'group': list, recurse: no}
            - {'path': '/var/lib/mailman/archives/private', 'owner': 'www-data', 'group': list, recurse: yes}
            - {'path': '/var/lib/mailman/archives/public', 'owner': 'root', 'group': list, recurse: yes}
            - {'path': '/var/lib/mailman/data', 'owner': 'list', 'group': list, recurse: yes}
            - {'path': '/var/lib/mailman/spam', 'owner': 'root', 'group': list, recurse: yes}

        - name: Enable Apache module CGI
          apache2_module:
            name: cgi
            state: present
          notify:
            - systemctl restart apache2

        - name: Add VirtualHost configuration of Apache
          template:
            src: '{{ item }}'
            dest: '/etc/apache2/sites-available/{{ item }}'
            owner: root
            group: root
            mode: 0664
          loop:
            - 'mailman.conf'
            - 'mailman.inc'
          register: apache_conf
          notify:
            - systemctl reload apache2

        - name: Enable Apache VirtualHost configuration
          when: apache_conf.changed
          shell:
            cmd: 'a2ensite mailman.conf'
            chdir: /etc/apache2/sites-available
          notify:
            - systemctl reload apache2

        - debug:
            msg: 'Run "newlist mailman" as root to create a first mailing list, or copy data from old server to /var/lib/mailman/'

        - name: Start Mailman
          systemd:
            name: mailman
            state: started
            enabled: yes

    - name: Write Spamassassin configuration to /etc/spamassassin/local.cf
      copy:
        dest: /etc/spamassassin/local.cf
        src: local.cf
        owner: root
        group: root
        mode: 0644
      notify:
        - systemctl restart amavisd-new

    - name: systemctl start amavisd-new amavisd-milter postfix
      systemd:
        name: '{{ item }}'
        state: started
      loop:
        - amavisd-new
        - amavisd-milter
        - postfix
        - postgrey


  handlers:
    - name: systemctl reload apache2
      systemd:
        name: apache2
        state: reloaded
    - name: systemctl restart apache2
      systemd:
        name: apache2
        state: restarted
    - name: systemctl reload postfix
      systemd:
        name: postfix
        state: reloaded
    - name: systemctl restart postfix
      systemd:
        name: postfix
        state: restarted
    - name: systemctl restart postgrey
      systemd:
        name: postgrey
        state: restarted
    - name: systemctl restart mailman
      systemd:
        name: mailman
        state: restarted
    - name: systemctl restart amavisd-new
      systemd:
        name: amavisd-new
        state: restarted
